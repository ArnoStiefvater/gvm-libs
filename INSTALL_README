$Id$

openvas-libraries: How to build and install
===========================================

Quick Guide:
------------

This should work on most systems:

./configure && make install

During configure, missing dependencies might be reported.
You need to resolve these and re-run the configure command.

Pre-installation requirements
-----------------------------

You first may want to remove older installations of OpenVAS
to avoid conflicts. Experts know how to have concurrent
installtions without conflicts.

You need a number of development packages installed
which are also checked by the configure command:

 * libglib >= 2.12
 * libgnutls >= 2.0
 * libpcap
 * libgpgme >= 1.1.2

Apart from these, some tools are required:

 * a C compiler (e.g. gcc)
 * bison
 * flex


configure options
-----------------

  All the configure options have been centralized the the 
  'configure' script of openvas-libraries.

  The current configure options are :

        --disable-ptmx        use this directive if you have problems
                              with the pseudo tty multiplexer; on 
                              some linux (kernel > 2.2) systems, the
                              /dev/ptmx is avaiable but the supporting
                              functions sometimes do not work as
                              expected

        --enable-zlib=peks    explicitely configure and compile the
			      data stream compression package against
                              the source fragment that comes with peks,
	                      even if the operating system provides
			      it as a library

        --enable-gmp=peks     explicitely configure and compile the
			      maths package against the source fragment
			      that comes with peks, even if the operating
		              system provides it as a library

        --enable-splitgmp     split off the gmp library that comes with the
			      peks sources from the cipher lib, and provide
			      a sepatate library instance: this flag is
			      needed only if the assembler part of the gmp
		  	      lib should not be used as a shared library,
			      while the libpeks, is.

  Some more elaborate options allow you to control whether to compile and
  link against the packages that come with peks, or to use resources from
  your operating system.

        --enable-zlib[=/path]  do not use the package provided with
                               peks, but the one already installed

        --enable-gmp[=/path]   do not use the package provided with
                               peks, but the one already installed

        --enable-random[=/dev] use this device as an additional random
                               source; you may need to set this explicitlely
			       on systems other than Linux and BSD where
                               there is a character device /dev/urandom
                               available (other device names will not be 
			       auto-detected.)
